name: Edgeware Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Edgeware Version'
        required: true
        default: 'v3.3.5'
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      id: checkout
      with:
        repository: hicommonwealth/edgeware-node
        ref: ${{ github.event.inputs.version }}
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ github.event.inputs.version }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ github.event.inputs.version }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ github.event.inputs.version }}
    - run: rustup install nightly-2021-03-15
    - run: rustup default nightly-2021-03-15-x86_64-unknown-linux-gnu
    - run: bash scripts/init.sh
    - run: bash setup.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
    - id: create_archive
      run: |
        ARCHIVE=edgeware-linux.tar.gz
        tar -czvf $ARCHIVE -C target/release edgeware
        echo ::set-output name=ASSET::$ARCHIVE
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.create_archive.outputs.ASSET }}
        asset_name: ${{ steps.create_archive.outputs.ASSET }}
        asset_content_type: application/gzip
